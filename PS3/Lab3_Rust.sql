--------------------------------------------------------
--  DDL for Table SCHOOL - 1
--------------------------------------------------------

  CREATE TABLE "C##_UD_TRUST"."SCHOOL" 
   (	"SCHOOL_ID" NUMBER(8), 
	"SCHOOL_NAME" VARCHAR2(30 BYTE), 
	"CREATED_BY" VARCHAR2(30 BYTE), 
	"CREATED_DATE" DATE, 
	"MODIFIED_BY" VARCHAR2(30 BYTE), 
	"MODIFIED_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SCHOOL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "C##_UD_TRUST"."SCHOOL_PK" ON "C##_UD_TRUST"."SCHOOL" ("SCHOOL_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  Constraints for Table SCHOOL
--------------------------------------------------------

  ALTER TABLE "C##_UD_TRUST"."SCHOOL" MODIFY ("SCHOOL_ID" NOT NULL ENABLE);
  ALTER TABLE "C##_UD_TRUST"."SCHOOL" MODIFY ("SCHOOL_NAME" NOT NULL ENABLE);
  ALTER TABLE "C##_UD_TRUST"."SCHOOL" MODIFY ("CREATED_BY" NOT NULL ENABLE);
  ALTER TABLE "C##_UD_TRUST"."SCHOOL" MODIFY ("CREATED_DATE" NOT NULL ENABLE);
  ALTER TABLE "C##_UD_TRUST"."SCHOOL" MODIFY ("MODIFIED_BY" NOT NULL ENABLE);
  ALTER TABLE "C##_UD_TRUST"."SCHOOL" MODIFY ("MODIFIED_DATE" NOT NULL ENABLE);
  ALTER TABLE "C##_UD_TRUST"."SCHOOL" ADD CONSTRAINT "SCHOOL_PK" PRIMARY KEY ("SCHOOL_ID")
  USING INDEX "C##_UD_TRUST"."SCHOOL_PK"  ENABLE;


--------------------------------------------------------
--  Insert a row in the School table - 2
--------------------------------------------------------

  INSERT INTO "C##_UD_TRUST"."SCHOOL" (SCHOOL_ID, SCHOOL_NAME, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE) VALUES ('1', 'University of Delaware', 'C##_UD_TRUST', TO_DATE('2022-03-02 00:00:00', 'YYYY-MM-DD HH24:MI:SS'), 'C##_UD_TRUST', TO_DATE('2022-03-02 00:00:00', 'YYYY-MM-DD HH24:MI:SS'))
/

--------------------------------------------------------
--  Update existing tables and add the School_ID foreign key and make value = row in School table - 3,4
--------------------------------------------------------

ALTER TABLE COURSE 
ADD (SCHOOL_ID NUMBER(8) DEFAULT 1 NOT NULL);

ALTER TABLE ENROLLMENT 
ADD (SCHOOL_ID NUMBER(8) DEFAULT 1 NOT NULL);

ALTER TABLE SECTION
ADD (SCHOOL_ID NUMBER(8) DEFAULT 1 NOT NULL);

ALTER TABLE STUDENT
ADD (SCHOOL_ID NUMBER(8) DEFAULT 1 NOT NULL);

--------------------------------------------------------
--  DROPPING PRIMARY AND FOREIGN KEYS - 5,6
--------------------------------------------------------

DECLARE
    CURSOR c_drop (
        constraint_type_in VARCHAR2
    ) IS
    SELECT
        *
    FROM
        user_constraints
    WHERE
        constraint_type = constraint_type_in;

BEGIN
    FOR r_drop IN c_drop('R') LOOP
        EXECUTE IMMEDIATE ' ALTER TABLE '
                          || r_drop.table_name
                          || ' DROP CONSTRAINT '
                          || r_drop.constraint_name;
    END LOOP;

    FOR r_drop IN c_drop('P') LOOP
        EXECUTE IMMEDIATE ' ALTER TABLE '
                          || r_drop.table_name
                          || ' DROP CONSTRAINT '
                          || r_drop.constraint_name;
    END LOOP;
END;
/

--------------------------------------------------------
-- REDEFINE PRIMARY AND FOREIGN KEYS - 7,8
--------------------------------------------------------
-- SCHOOL
ALTER TABLE SCHOOL
ADD CONSTRAINT SCHOOL_PK PRIMARY KEY 
(
  SCHOOL_ID 
)
USING INDEX C##_UD_TRUST.SCHOOL_PK
ENABLE;

-- COURSE
ALTER TABLE COURSE 
ADD (PREREQUISITE_SCHOOL_ID NUMBER(8) );

ALTER TABLE COURSE
ADD CONSTRAINT COURSE_PK PRIMARY KEY 
(
  COURSE_NO 
, SCHOOL_ID 
)
ENABLE;

ALTER TABLE COURSE
ADD CONSTRAINT COURSE_FK1 FOREIGN KEY
(
  PREREQUISITE 
, PREREQUISITE_SCHOOL_ID 
)
REFERENCES COURSE
(
  COURSE_NO 
, SCHOOL_ID 
)
ENABLE;

ALTER TABLE COURSE
ADD CONSTRAINT COURSE_FK2 FOREIGN KEY
(
  SCHOOL_ID 
)
REFERENCES SCHOOL
(
  SCHOOL_ID 
)
ENABLE;

-- SECTION
ALTER TABLE SECTION
ADD CONSTRAINT SECTION_PK PRIMARY KEY 
(
  SECTION_ID 
, SCHOOL_ID 
)
ENABLE;

ALTER TABLE SECTION
ADD CONSTRAINT SECTION_FK1 FOREIGN KEY
(
  COURSE_NO 
, SCHOOL_ID 
)
REFERENCES COURSE
(
  COURSE_NO 
, SCHOOL_ID 
)
ENABLE;

ALTER TABLE SECTION
ADD CONSTRAINT SECTION_FK2 FOREIGN KEY
(
  SCHOOL_ID 
)
REFERENCES SCHOOL
(
  SCHOOL_ID 
)
ENABLE;

-- STUDENT
ALTER TABLE STUDENT
ADD CONSTRAINT STUDENT_PK PRIMARY KEY 
(
  STUDENT_ID 
, SCHOOL_ID 
)
ENABLE;

ALTER TABLE STUDENT
ADD CONSTRAINT STUDENT_FK1 FOREIGN KEY
(
  SCHOOL_ID 
)
REFERENCES SCHOOL
(
  SCHOOL_ID 
)
ENABLE;

-- ENROLLMENT
ALTER TABLE ENROLLMENT
ADD CONSTRAINT ENROLLMENT_PK PRIMARY KEY 
(
  STUDENT_ID 
, SCHOOL_ID 
, SECTION_ID 
)
ENABLE;

ALTER TABLE ENROLLMENT
ADD CONSTRAINT ENROLLMENT_FK1 FOREIGN KEY
(
  SECTION_ID 
, SCHOOL_ID 
)
REFERENCES SECTION
(
  SECTION_ID 
, SCHOOL_ID 
)
ENABLE;

ALTER TABLE ENROLLMENT
ADD CONSTRAINT ENROLLMENT_FK2 FOREIGN KEY
(
  STUDENT_ID 
, SCHOOL_ID 
)
REFERENCES STUDENT
(
  STUDENT_ID 
, SCHOOL_ID 
)
ENABLE;

ALTER TABLE ENROLLMENT
ADD CONSTRAINT ENROLLMENT_FK3 FOREIGN KEY
(
  SCHOOL_ID 
)
REFERENCES SCHOOL
(
  SCHOOL_ID 
)
ENABLE;


--------------------------------------------------------
--  DDL for Trigger TRG02_COURSE - 9
--------------------------------------------------------

create or replace TRIGGER "TRG02_COURSE" 
BEFORE INSERT OR UPDATE ON COURSE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING THEN
      SELECT USER INTO :NEW.CREATED_BY FROM SYS.DUAL;
      SELECT USER INTO :NEW.MODIFIED_BY FROM SYS.DUAL;
      SELECT SYSDATE INTO :NEW.CREATED_DATE FROM SYS.DUAL;
      SELECT SYSDATE INTO :NEW.MODIFIED_DATE FROM SYS.DUAL;
    END IF;

    IF UPDATING THEN
      SELECT USER INTO :NEW.MODIFIED_BY FROM SYS.DUAL;
      SELECT SYSDATE INTO :NEW.MODIFIED_DATE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

--------------------------------------------------------
--  DDL for Trigger TRG02_ENROLLMENT
--------------------------------------------------------

create or replace TRIGGER "TRG02_ENROLLMENT" 
BEFORE INSERT OR UPDATE ON ENROLLMENT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING THEN
      SELECT USER INTO :NEW.CREATED_BY FROM SYS.DUAL;
      SELECT USER INTO :NEW.MODIFIED_BY FROM SYS.DUAL;
      SELECT SYSDATE INTO :NEW.CREATED_DATE FROM SYS.DUAL;
      SELECT SYSDATE INTO :NEW.MODIFIED_DATE FROM SYS.DUAL;
    END IF;

    IF UPDATING THEN
      SELECT USER INTO :NEW.MODIFIED_BY FROM SYS.DUAL;
      SELECT SYSDATE INTO :NEW.MODIFIED_DATE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

--------------------------------------------------------
--  DDL for Trigger TRG02_SECTION
--------------------------------------------------------

create or replace TRIGGER "TRG02_SECTION" 
BEFORE INSERT OR UPDATE ON SECTION 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING THEN
      SELECT USER INTO :NEW.CREATED_BY FROM SYS.DUAL;
      SELECT USER INTO :NEW.MODIFIED_BY FROM SYS.DUAL;
      SELECT SYSDATE INTO :NEW.CREATED_DATE FROM SYS.DUAL;
      SELECT SYSDATE INTO :NEW.MODIFIED_DATE FROM SYS.DUAL;
    END IF;

    IF UPDATING THEN
      SELECT USER INTO :NEW.MODIFIED_BY FROM SYS.DUAL;
      SELECT SYSDATE INTO :NEW.MODIFIED_DATE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

--------------------------------------------------------
--  DDL for Trigger TRG02_STUDENT
--------------------------------------------------------

create or replace TRIGGER "TRG02_STUDENT" 
BEFORE INSERT OR UPDATE ON STUDENT
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING THEN
      SELECT USER INTO :NEW.CREATED_BY FROM SYS.DUAL;
      SELECT USER INTO :NEW.MODIFIED_BY FROM SYS.DUAL;
      SELECT SYSDATE INTO :NEW.CREATED_DATE FROM SYS.DUAL;
      SELECT SYSDATE INTO :NEW.MODIFIED_DATE FROM SYS.DUAL;
    END IF;

    IF UPDATING THEN
      SELECT USER INTO :NEW.MODIFIED_BY FROM SYS.DUAL;
      SELECT SYSDATE INTO :NEW.MODIFIED_DATE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
